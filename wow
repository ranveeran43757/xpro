-- LocalScript in StarterPlayer ‚Üí StarterPlayerScripts

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local backpack = player:WaitForChild("Backpack")
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")

-- Key system variables
local validKeys = {
    "xprohub"
}
local isAuthenticated = false
local isUIOpen = true -- UI state variable

-- create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PurgeHubCloneDemo"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Key authentication frame
local keyFrame = Instance.new("Frame")
keyFrame.Name = "KeyFrame"
keyFrame.Size = UDim2.new(0, 400, 0, 250)
keyFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
keyFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
keyFrame.BackgroundTransparency = 0.05
keyFrame.BorderSizePixel = 0
keyFrame.Parent = screenGui
keyFrame.Visible = true

-- add corner to key frame
local keyCorner = Instance.new("UICorner")
keyCorner.CornerRadius = UDim.new(0, 15)
keyCorner.Parent = keyFrame

-- add stroke to key frame
local keyStroke = Instance.new("UIStroke")
keyStroke.Color = Color3.fromRGB(100, 200, 255)
keyStroke.Thickness = 2
keyStroke.Transparency = 0.3
keyStroke.Parent = keyFrame

-- key title
local keyTitle = Instance.new("TextLabel")
keyTitle.Parent = keyFrame
keyTitle.Size = UDim2.new(1, -20, 0, 60)
keyTitle.Position = UDim2.new(0, 10, 0, 10)
keyTitle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
keyTitle.BackgroundTransparency = 0.2
keyTitle.Text = "üîê XPRO Hub ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
keyTitle.TextColor3 = Color3.fromRGB(100, 200, 255)
keyTitle.TextScaled = true
keyTitle.Font = Enum.Font.GothamBold

-- add corner to key title
local keyTitleCorner = Instance.new("UICorner")
keyTitleCorner.CornerRadius = UDim.new(0, 10)
keyTitleCorner.Parent = keyTitle

-- key input box
local keyInput = Instance.new("TextBox")
keyInput.Parent = keyFrame
keyInput.Size = UDim2.new(1, -20, 0, 50)
keyInput.Position = UDim2.new(0, 10, 0, 85)
keyInput.PlaceholderText = "üîë ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô..."
keyInput.ClearTextOnFocus = false
keyInput.Text = ""
keyInput.Font = Enum.Font.Gotham
keyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
keyInput.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
keyInput.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
keyInput.BackgroundTransparency = 0.1
keyInput.BorderSizePixel = 0

-- add corner to key input
local keyInputCorner = Instance.new("UICorner")
keyInputCorner.CornerRadius = UDim.new(0, 8)
keyInputCorner.Parent = keyInput

-- key submit button
local keySubmit = Instance.new("TextButton")
keySubmit.Parent = keyFrame
keySubmit.Size = UDim2.new(1, -20, 0, 45)
keySubmit.Position = UDim2.new(0, 10, 0, 145)
keySubmit.Text = "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå"
keySubmit.Font = Enum.Font.GothamBold
keySubmit.TextScaled = true
keySubmit.TextColor3 = Color3.new(1, 1, 1)
keySubmit.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
keySubmit.BackgroundTransparency = 0.1
keySubmit.BorderSizePixel = 0

-- add corner to key submit
local keySubmitCorner = Instance.new("UICorner")
keySubmitCorner.CornerRadius = UDim.new(0, 10)
keySubmitCorner.Parent = keySubmit

-- key feedback
local keyFeedback = Instance.new("TextLabel")
keyFeedback.Parent = keyFrame
keyFeedback.Size = UDim2.new(1, -20, 0, 30)
keyFeedback.Position = UDim2.new(0, 10, 0, 200)
keyFeedback.BackgroundTransparency = 1
keyFeedback.Text = "üí° ‡πÉ‡∏™‡πà‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
keyFeedback.TextColor3 = Color3.fromRGB(255, 220, 120)
keyFeedback.TextScaled = true
keyFeedback.Font = Enum.Font.Gotham

-- Key validation function
local function validateKey()
    local inputKey = keyInput.Text
    if inputKey == "" then
        keyFeedback.Text = "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå"
        keyFeedback.TextColor3 = Color3.fromRGB(255, 100, 100)
        return
    end
    
    for _, validKey in ipairs(validKeys) do
        if inputKey == validKey then
            isAuthenticated = true
            keyFeedback.Text = "‚úÖ ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î UI..."
            keyFeedback.TextColor3 = Color3.fromRGB(100, 255, 100)
            
            -- Use spawn to avoid blocking and show UI immediately
            task.spawn(function()
                task.wait(1)
                keyFrame.Visible = false
                mainFrame.Visible = true
                minimizedFrame.Visible = false
                refreshList()
            end)
            return
        end
    end
    
    keyFeedback.Text = "‚ùå ‡∏Ñ‡∏µ‡∏¢‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!"
    keyFeedback.TextColor3 = Color3.fromRGB(255, 100, 100)
end

-- Connect key events
keySubmit.Activated:Connect(validateKey)
keyInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        validateKey()
    end
end)

-- main frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 350, 0, 480)
mainFrame.Position = UDim2.new(0.5, -175, 0.5, -240)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Visible = false -- Hidden until authenticated

-- Minimized frame (collapsed state)
local minimizedFrame = Instance.new("Frame")
minimizedFrame.Name = "MinimizedFrame"
minimizedFrame.Size = UDim2.new(0, 300, 0, 50)
minimizedFrame.Position = UDim2.new(0, 10, 0, 10)
minimizedFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
minimizedFrame.BackgroundTransparency = 0.1
minimizedFrame.BorderSizePixel = 0
minimizedFrame.Parent = screenGui
minimizedFrame.Visible = false

-- add corner to minimized frame
local minCorner = Instance.new("UICorner")
minCorner.CornerRadius = UDim.new(0, 12)
minCorner.Parent = minimizedFrame

-- add stroke to minimized frame
local minStroke = Instance.new("UIStroke")
minStroke.Color = Color3.fromRGB(100, 200, 255)
minStroke.Thickness = 1
minStroke.Transparency = 0.5
minStroke.Parent = minimizedFrame

-- minimized title
local minTitle = Instance.new("TextLabel")
minTitle.Parent = minimizedFrame
minTitle.Size = UDim2.new(0.7, 0, 1, 0)
minTitle.Position = UDim2.new(0, 10, 0, 0)
minTitle.BackgroundTransparency = 1
minTitle.Text = "‚ú® XPRO Hub: ‡πÇ‡∏õ‡∏£‡πÄ‡∏™‡∏Å‡∏Ç‡∏≠‡∏á V1"
minTitle.TextColor3 = Color3.fromRGB(100, 200, 255)
minTitle.TextScaled = true
minTitle.Font = Enum.Font.GothamBold
minTitle.TextXAlignment = Enum.TextXAlignment.Left

-- open menu button
local openBtn = Instance.new("TextButton")
openBtn.Parent = minimizedFrame
openBtn.Size = UDim2.new(0.25, 0, 0.8, 0)
openBtn.Position = UDim2.new(0.72, 0, 0.1, 0)
openBtn.Text = "üìã ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π"
openBtn.Font = Enum.Font.GothamBold
openBtn.TextScaled = true
openBtn.TextColor3 = Color3.new(1, 1, 1)
openBtn.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
openBtn.BackgroundTransparency = 0.1
openBtn.BorderSizePixel = 0

-- add corner to open button
local openCorner = Instance.new("UICorner")
openCorner.CornerRadius = UDim.new(0, 8)
openCorner.Parent = openBtn

-- enable dragging for minimized frame
local minDragging = false
local minDragStart, minStartPos, minDragInput

minimizedFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        minDragging = true
        minDragStart = input.Position
        minStartPos = minimizedFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                minDragging = false
            end
        end)
    end
end)

minimizedFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or
       input.UserInputType == Enum.UserInputType.Touch then
        minDragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if minDragging and input == minDragInput then
        local delta = input.Position - minDragStart
        minimizedFrame.Position = UDim2.new(
            minStartPos.X.Scale, minStartPos.X.Offset + delta.X,
            minStartPos.Y.Scale, minStartPos.Y.Offset + delta.Y
        )
    end
end)

-- add corner rounding
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- add subtle stroke
local mainStroke = Instance.new("UIStroke")
mainStroke.Color = Color3.fromRGB(80, 80, 80)
mainStroke.Thickness = 1
mainStroke.Transparency = 0.5
mainStroke.Parent = mainFrame

-- enable dragging
local dragging = false
local dragStart, startPos, dragInput

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or
       input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

-- title label
local title = Instance.new("TextLabel")
title.Parent = mainFrame
title.Size = UDim2.new(1, -20, 0, 45)
title.Position = UDim2.new(0, 10, 0, 10)
title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
title.BackgroundTransparency = 0.3
title.Text = "XPRO Hub: ‡πÇ‡∏õ‡∏£‡πÄ‡∏™‡∏Å‡∏Ç‡∏≠‡∏á V1"
title.TextColor3 = Color3.fromRGB(100, 200, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamBold

-- close/minimize button
local closeBtn = Instance.new("TextButton")
closeBtn.Parent = mainFrame
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -40, 0, 10)
closeBtn.Text = "‚ûñ"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextScaled = true
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
closeBtn.BackgroundTransparency = 0.2
closeBtn.BorderSizePixel = 0

-- add corner to close button
local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeBtn

-- add corner to title
local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = title

-- add glow effect to title
local titleStroke = Instance.new("UIStroke")
titleStroke.Color = Color3.fromRGB(100, 200, 255)
titleStroke.Thickness = 1
titleStroke.Transparency = 0.7
titleStroke.Parent = title

-- tool name input
local inputBox = Instance.new("TextBox")
inputBox.Parent = mainFrame
inputBox.Size = UDim2.new(1, -20, 0, 45)
inputBox.Position = UDim2.new(0, 10, 0, 70)
inputBox.PlaceholderText = "üîç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠"
inputBox.ClearTextOnFocus = false
inputBox.Text = ""
inputBox.Font = Enum.Font.Gotham
inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
inputBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
inputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
inputBox.BackgroundTransparency = 0.2
inputBox.BorderSizePixel = 0

-- add corner to input
local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 8)
inputCorner.Parent = inputBox

-- add stroke to input
local inputStroke = Instance.new("UIStroke")
inputStroke.Color = Color3.fromRGB(70, 70, 70)
inputStroke.Thickness = 1
inputStroke.Transparency = 0.5
inputStroke.Parent = inputBox

-- clone count input
local countBox = Instance.new("TextBox")
countBox.Parent = mainFrame
countBox.Size = UDim2.new(1, -20, 0, 45)
countBox.Position = UDim2.new(0, 10, 0, 125)
countBox.PlaceholderText = "üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏≥‡πÄ‡∏ô‡∏≤ (1‚Äì9)"
countBox.ClearTextOnFocus = false
countBox.Text = "9"
countBox.Font = Enum.Font.Gotham
countBox.TextColor3 = Color3.fromRGB(255, 255, 255)
countBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
countBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
countBox.BackgroundTransparency = 0.2
countBox.BorderSizePixel = 0

-- add corner to count box
local countCorner = Instance.new("UICorner")
countCorner.CornerRadius = UDim.new(0, 8)
countCorner.Parent = countBox

-- add stroke to count box
local countStroke = Instance.new("UIStroke")
countStroke.Color = Color3.fromRGB(70, 70, 70)
countStroke.Thickness = 1
countStroke.Transparency = 0.5
countStroke.Parent = countBox

-- refresh list button
local refreshBtn = Instance.new("TextButton")
refreshBtn.Parent = mainFrame
refreshBtn.Size = UDim2.new(1, -20, 0, 40)
refreshBtn.Position = UDim2.new(0, 10, 0, 180)
refreshBtn.Text = "üîÑ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°"
refreshBtn.Font = Enum.Font.GothamBold
refreshBtn.TextScaled = true
refreshBtn.TextColor3 = Color3.new(1, 1, 1)
refreshBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
refreshBtn.BackgroundTransparency = 0.1
refreshBtn.BorderSizePixel = 0

-- add corner to refresh button
local refreshCorner = Instance.new("UICorner")
refreshCorner.CornerRadius = UDim.new(0, 8)
refreshCorner.Parent = refreshBtn

-- add stroke to refresh button
local refreshStroke = Instance.new("UIStroke")
refreshStroke.Color = Color3.fromRGB(90, 90, 90)
refreshStroke.Thickness = 1
refreshStroke.Transparency = 0.5
refreshStroke.Parent = refreshBtn

-- list frame
local listFrame = Instance.new("ScrollingFrame")
listFrame.Parent = mainFrame
listFrame.Size = UDim2.new(1, -20, 0, 170)
listFrame.Position = UDim2.new(0, 10, 0, 230)
listFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
listFrame.ScrollBarThickness = 4
listFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
listFrame.BackgroundTransparency = 0.2
listFrame.BorderSizePixel = 0
listFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 200, 255)

-- add corner to list frame
local listCorner = Instance.new("UICorner")
listCorner.CornerRadius = UDim.new(0, 8)
listCorner.Parent = listFrame

-- add stroke to list frame
local listStroke = Instance.new("UIStroke")
listStroke.Color = Color3.fromRGB(70, 70, 70)
listStroke.Thickness = 1
listStroke.Transparency = 0.5
listStroke.Parent = listFrame

local uiList = Instance.new("UIListLayout")
uiList.Parent = listFrame
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Padding = UDim.new(0, 4)

-- clone button
local cloneBtn = Instance.new("TextButton")
cloneBtn.Parent = mainFrame
cloneBtn.Size = UDim2.new(1, -20, 0, 50)
cloneBtn.Position = UDim2.new(0, 10, 0, 410)
cloneBtn.Text = "‚ö° ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡πÉ‡∏ô hotbar"
cloneBtn.Font = Enum.Font.GothamBold
cloneBtn.TextScaled = true
cloneBtn.TextColor3 = Color3.new(1, 1, 1)
cloneBtn.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
cloneBtn.BackgroundTransparency = 0.1
cloneBtn.BorderSizePixel = 0

-- add corner to clone button
local cloneCorner = Instance.new("UICorner")
cloneCorner.CornerRadius = UDim.new(0, 10)
cloneCorner.Parent = cloneBtn

-- add glow effect to clone button
local cloneStroke = Instance.new("UIStroke")
cloneStroke.Color = Color3.fromRGB(100, 200, 255)
cloneStroke.Thickness = 2
cloneStroke.Transparency = 0.3
cloneStroke.Parent = cloneBtn

-- feedback label
local feedback = Instance.new("TextLabel")
feedback.Parent = mainFrame
feedback.Size = UDim2.new(1, -20, 0, 15)
feedback.Position = UDim2.new(0, 10, 0, 465)
feedback.BackgroundTransparency = 1
feedback.Text = ""
feedback.TextColor3 = Color3.fromRGB(255, 220, 120)
feedback.TextScaled = true
feedback.Font = Enum.Font.Gotham

-- currently selected tool name
local selectedName

-- refresh list function
local function refreshList()
    for _, child in ipairs(listFrame:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end
    local tools = {}
    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA("Tool") then
            table.insert(tools, tool)
        end
    end
    for i, tool in ipairs(tools) do
        local btn = Instance.new("TextButton")
        btn.Parent = listFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        btn.Text = "üîß " .. tool.Name .. " (‡∏ä‡πà‡∏≠‡∏á " .. i .. ")"
        btn.Font = Enum.Font.Gotham
        btn.TextScaled = true
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        btn.BackgroundTransparency = 0.2
        btn.BorderSizePixel = 0
        
        -- add corner to tool button
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 6)
        btnCorner.Parent = btn
        
        -- add stroke to tool button
        local btnStroke = Instance.new("UIStroke")
        btnStroke.Color = Color3.fromRGB(80, 80, 80)
        btnStroke.Thickness = 1
        btnStroke.Transparency = 0.6
        btnStroke.Parent = btn
        
        btn.Activated:Connect(function()
            selectedName = tool.Name
            inputBox.Text = tool.Name
            for _, c in ipairs(listFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                    c.BackgroundTransparency = 0.2
                    if c:FindFirstChild("UIStroke") then
                        c.UIStroke.Color = Color3.fromRGB(80, 80, 80)
                    end
                end
            end
            btn.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
            btn.BackgroundTransparency = 0.1
            if btn:FindFirstChild("UIStroke") then
                btn.UIStroke.Color = Color3.fromRGB(100, 200, 255)
            end
        end)
    end
    listFrame.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 8)
end

-- clone and equip function
local function doClone()
    if not isAuthenticated then
        return -- Prevent usage if not authenticated
    end
    feedback.Text = ""
    local toolName = inputBox.Text or ""
    if toolName == "" then
        feedback.Text = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°"
        return
    end
    local count = tonumber(countBox.Text) or 9
    count = math.clamp(count, 1, 9)
    local original = backpack:FindFirstChild(toolName)
    if not original then
        feedback.Text = '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ä‡∏∑‡πà‡∏≠ "' .. toolName .. '"'
        return
    end
    -- create clones without clearing backpack
    for i = 1, count do
        local cloneTool = original:Clone()
        cloneTool.Parent = backpack
        if i == 1 then
            humanoid:EquipTool(cloneTool)
        end
        task.wait(0.05)
    end
    feedback.Text = ("‡πÄ‡∏û‡∏¥‡πà‡∏° %d ‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á \"%s\" (‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°)"):format(count, toolName)
    -- refresh list to show updated tools
    refreshList()
end

-- connect events
refreshBtn.Activated:Connect(function()
    if isAuthenticated then
        refreshList()
    end
end)
cloneBtn.Activated:Connect(doClone)

-- UI toggle functions
local function toggleUI()
    if isUIOpen then
        -- Minimize UI
        mainFrame.Visible = false
        minimizedFrame.Visible = true
        isUIOpen = false
    else
        -- Open UI
        mainFrame.Visible = true
        minimizedFrame.Visible = false
        isUIOpen = true
    end
end

-- Connect toggle events
closeBtn.Activated:Connect(toggleUI)
openBtn.Activated:Connect(toggleUI)

-- initial load (only after authentication)
-- Remove the duplicate authentication check since it's now handled in validateKey()
